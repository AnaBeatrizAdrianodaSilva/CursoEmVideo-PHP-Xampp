
Variáveis -> São usadas para armazenamento de dados. 

No PHP o símbolo usado para as Variáveis é o "$". Ex: $idade = 3;

------------------------------------------------------------------------------------------

Tipos de Variáveis e Declarações:

Inteiro -> (int) / (integer), são usadas na conversão para número inteiro.

Real -> (real) / (float) / (double), são usadas na conversão para número real. 

Caractere -> (string) é usada para a conversão para texto.

Lógico -> Não existe a conversão. 

------------------------------------------------------------------------------------------

Concatenação:

No PHP o "." (ponto) é usado para fazer a concatenação.

Ex: 
    $nome = "Gustavo";
    $idade = 36;
    echo $nome." Tem ".$idade." anos!";

               Ou

Também é possível fazer a concatenação colocando as variáveis dentro das aspas duplas (""). 

Ex:

    $nome = "Gustavo";
        $idade = 36;
        echo  "$nome tem $idade anos!";

OBS: A concatenação usando as aspas não funciona se forem as aspas simples (''), o PHP lê como se fosse uma string....

--------------------------------------------------------------------------------------------

Operados Aritméticos

Adição -> + -> Operador que realiza uma soma. Ex: $r = $a + $b;

Subtração -> - -> Operador que realiza uma subtração. Ex: $r = $a - $b; 

Multiplicação -> * -> Operador que realiza uma multiplicação. Ex: $r = $a * $b;

Divisão -> / -> Operador que realiza uma divisão. Ex: $r = $a / $b;

Módulo / Resto da Divisão -> % -> Operador que calcula o resto de uma divisão. Ex: $r = $a % $b;

OBS: Não é possível fazer uma concatenação com os Operadores Aritméticos dentro das Aspas ("" e ''), o PHP lê como se fosse uma string. 

-----------------------------------------------------------------------------------------------------

Ordem de Precedência dos Operadores Aritméticos

Parênteses -> () -> Se uma conta tiver um parêntese no meio, será o parêntese o primeiro a ser resolvido.

Multiplicação (*) / Divisão (/) / Resto da Divisão (%) -> Depois do parêntese o segundo operador é a multiplicação, divisão ou o resto da divisão, depende qual vier primeiro.

Adição (+) / Subtração (-) -> O terceiro operador a ser resolvido é a adição e a subtração, dependendo de qual vier na conta primero.

------------------------------------------------------------------------------------------------------

Funções Matemáticas

abs () -> Valor Absoluto -> Serve para pegar o valor absoluto de uma variável.

pow () -> Potenciação -> Serve para criar uma potenciação.

sqrt () -> Raiz Quadrada -> Serve para criar uma raiz quadrada.

round () -> Arrendondamento -> Serva para arrendondar um valor. Existe mais duas funções que servem para o arredondamento: ceil e floor, o ceil arredonda para cima independente do valor após a vírgula, e o floor arredonda para baixo independente do valor após a vírgula, enquanto o round repeita as regras de arredondamento da matemática.

intval () -> Valor Inteiro da Variável -> Essa função serve para pegar o número inteiro de u número real.

number_format () -> Formatação -> Muito útil na formatação de número monetário.

Exemplos na Aula de Operados Aritméticos

------------------------------------------------------------------------------------------------------------

Operadores de Atribuição

 
Adição -> += 
Ex: $a = $a + $b -> $a += $b

Subtração -> -= 
Ex: $a = $a - $b -> $a -= $b

Multiplicação > *=
Ex: $a = $a * $b -> $a *= $b

Divisão -> /=
Ex: $a = $a / $b -> $a /= $b

Módulo / Resto da Divisão -> %=
Ex: $a = $a % $b -> $a %= $b

Concatenação -> Usado para string na hora de concatenar as expressões
Ex: $a = $a . $b -> $a .= $b -> $a recebe $a contenado a $b

Exercício na aula de Operadores de Atribuição
-------------------------------------------------------------------------------------------------------------

Operadores de Incremento

Pré-Incremento -> ++variável -> Ele vai incrementar o ++ antes de rodar a varialvel.
Ex: $a = $a + 1 -> ++$a

Pós-Incremento -> varialvel++ -> Ele vai rodar a varialvel primeiro para depois incrementar o ++.
Ex: $a = $a + 1 -> $a++

Pré-Decremento -> --variável -> Ele vai incrementar o -- antes de rodar a varialvel.
Ex: $a = $a - 1 -> --$a

Pós-Decremento -> varialvel-- -> Ele vai rodar a varialvel primeiro para depois incrementar o --.
Ex: $a = $a - 1 -> $a--

Exercício na aula de Operadores de Atribuição
--------------------------------------------------------------------------------------------------------------

Comentários

// -> Comenta uma linha.

# -> Comenta uma linha.

/**/ -> Comenta várias linhas.

----------------------------------------------------------------------------------------------------------------

Variáveis Referenciadas

& -> uma varialvel se tornará uma referencia a outra.
Ex:

    $a = 3;
    $b = &$a; 
    $b += 5;
    echo $a; -> Resposta 8
    echo $b; -> Resposta 8

A varialvel $a se tornará uma referencia a varial $b, ou seja $b terá o mesmo valor que $a, e tudo que acontecer com uma acontecerá com a outra.

Exercício na aula de Operadores de Atribuição
---------------------------------------------------------------------------------------------------------------------

Variáveis de Variáveis

Ex:

    $site = "cursoemvideo";
    $$site = "CursoPHp";

Basicamente, a segunda variável pego o valor atribuído a primeira variável como nome.

Exercícios na aula de Operadores de Atribuição.
---------------------------------------------------------------------------------------------------------------------------

Operadores Relacionais

Maior -> > -> Usado na comparação para ver se determinada variável é a maior.
Ex: $a > $b

Menor -> < -> Usada na comparação para ver se determinada variável é a menor.
Ex: $a < $b

Maior ou Igual -> >= -> Usada na comparação para ver se determinada variável é maior ou igual a outra.
Ex: $a >= $b

Menor ou Igual -> <= -> Usada na comparação para ver se determinada variável é menor ou igual a outra.
Ex: $a <= $b

Diferente -> <> ou != -> Usadas na comparação para ver se determinada variável é diferente da outra.
Ex: $a <> $b

Igual -> == -> Usada na comparação para ver se determinada variável é igual a outra.
Ex: 
    $a = 3;
    $b = "3";
    $a == $b; 
    
O operador vai dizer que está certo, apesar de uma variável ser do tipo number e a outra ser do tipo string.

Idêntico -> === -> Usada na comparação para ver se determinada variável for do mesmo tipo da outra.
Ex:
    $a = 3;
    $b = "3";
    $a === $b;

O operador vai dizer que está errado, pois as variáveis são de tipos diferentes, sendo uma do tipo number e a outra do tipo string.

Exercício na aula de Operadores Unitários
------------------------------------------------------------------------------------------------------------------------

Operador Ternário


sintaxe -> expressão ? valor verdadeiro : valor falso

Ex: 
                       falso  
                         |
$maior = $a > $b ? $a : $b
           |        | 
     expressão  verdadeiro

 Se a variável $a for maior que a variável $b, então $a é verdadeiro, se não é falso e a variável $b é a maior.

Se a variável $a for maior que $b, a variável $maior irá receber a variável $a, se a variável $a for menor que a variável $b, a variável $maior irá receber a variável $b.

Exercício na aula de Operadores Unitários
-------------------------------------------------------------------------------------------------------------------------

Operadores Lógicos

&& -> E -> Só pode ser considerado verdadeiro apenas se todas as afirmações forem verdadeiras, basta ter uma afirmação falsa para o resultado ser falso.

|| -> OU -> Para o resultado ser verdadeiro, basta ter uma afirmação verdadeira, e para o resultado ser falso, todas as afirmações precisam ser falsas.

XOR -> OU Exclusivo -> Para o resultado ser verdadeiro, todas as afirmações tem que ter uma verdadeira e uma falsa, e para ser um resultado falso, basta ter todas as afirmações verdadeiras ou falsas.

! -> NÃO -> Quando uma afirmação for verdadeiro resultado será falso, e quando a afirmação for falsa o resultado será verdadeiro.

Exercício na aula de Operadores Lógicos
---------------------------------------------------------------------------------------------------------------------------

Integração HTML e PHP

Na tag <form></form> no HTML, para pegar os dados é usado dois parâmetros, o method="" e o action="".

method = "" -> Indica o metodo de envio, podendo ser get ou post.

action = "" -> Indica uma ação, para onde os dados serão enviados.

Exemplo HTML:

<form method="get" action="dados.php"> 
    <input type="text" name"v">
    <input type="submt" value-"Calcular">
</form>

Quando apertar no botão Calcular, os dados da caixa de texto "v" irá mandar para o arquivo dados.php.

Exemplo PHP:

<?php
    $valor = $_GET["v"];
?>

A variável $valor pegou o metodo dito no form HTML, que no caso seria o $_GET, e pegou o nome do dado, que no caso seria "v".

Metodo GET e POST

Se usado no formulário HTML o method="get", o código em PHP será $_GET.
Se usado no formulário HTML o method="post", o código em PHP será $_POST.

Exercícios na aula de Integração PHP e HTML
-----------------------------------------------------------------------------------------------------------

Códigos

date() -> O código date("") faz com que diga o ano em que você está. Colocar o "y" minúsculo faz com que aparece o dois números do ano, no caso o 22 de 2022, o "Y" maiúsculo faz com que apareça o ano inteiro, no caso 2022.

isset() -> Significa: se foi configurado.

-------------------------------------------------------------------------------------------------------------

Array

Um array serve para armazenar mais de uma dado dentro de uma única variável.

Para criar uma array é usado os colchetes [].

Ex: $ingredientes = [ // Os valores dentro de array começam pelo 0
    'Açúcar', // Item 0
    'Farinha', // Item 1
    'Ovos', // Item 2
    'Leite', // Item 3
    'Azeite', // Item 4
    'Fermento' // Item 5
];

    echo $ingredientes[0]."<br>"; // O 0 dentro do colchete indica qual o valor da array $ingredientes é para escrever.
    echo $ingredientes[1]."<br>";
    echo $ingredientes[2]."<br>";
    echo $ingredientes[3]."<br>";
    echo $ingredientes[4]."<br>";
    echo $ingredientes[5]."<br>";


-------------------------------------------------------------------------------------------------------

Array Spread

Uma técnica usada para colocar os valores de uma array em outra array.

EX:

$bolo = [
    ...$ingredientes, 'Granulado'
]; 

Somente funciona nas versões mais atualizadas do PHP.

--------------------------------------------------------------------------------------------------------

print_r () -> Mostra todas os valores de uma array e seus números.

Ex:

print_r($ingredientes);

Resultado: Array ( [0] => Açúcar [1] => Farinha [2] => Ovos [3] => Leite [4] => Azeite [5] => Fermento )

------------------------------------------------------------------------------------------------------------

Estrutura Condicional if e else

if (condição) {
    // Bloco 1
} else {
    // Bloco 2
}

if -> Se
else -> Então

Se a condição for verdadeira, o bloco 1 é realizado, se a condição for falsa, o bloco 2 será realizado.

Ex:

    if ($idade >= 18) {
        $vota = true;
    } else {
        $vota = false;
    };


